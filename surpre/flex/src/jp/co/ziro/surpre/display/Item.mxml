<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="220" height="210"
		 verticalAlign="middle" horizontalAlign="center"
		 borderColor="0xfefefe" borderThickness="5" borderStyle="solid"
		 creationComplete="init()"
		 backgroundColor="0xeef1f1">

	<mx:Script>
		<![CDATA[
			import mx.controls.DataGrid;

		import jp.co.ziro.surpre.display.amazon.AmazonItem;
		import jp.co.ziro.surpre.display.photozo.PhotozoItem;
		import jp.co.ziro.surpre.display.yahoo.YahooItem;
		import jp.co.ziro.surpre.display.youtube.YoutubeItem;
		import jp.co.ziro.surpre.display.twitter.TimelineItem;
		import jp.co.ziro.surpre.display.twitter.FollowerItem;
		import jp.co.ziro.surpre.display.twitter.FriendItem;
		import jp.co.ziro.surpre.Globals;
		import jp.co.ziro.surpre.event.TimelineEvent;
		import mx.controls.Alert;
  		import mx.core.DragSource;
  		import mx.managers.DragManager;
  		import mx.events.DragEvent;
		import jp.co.ziro.surpre.event.PanelEvent;
 
		private var drowItem:BaseItem;
		
		private var _idx:Number;
		private var _effectIdx:Number;
		
		private var startPointX:Number;
		private var startPointY:Number;

		//インデックス設定
		public function set index(value:Number):void {
			_idx = value;
			_effectIdx = _idx;
		}

		//最初の初期化
		private function init():void {
			initComponent(null,ItemType.EMPTY);
		}

		//初期化
		public function initComponent(xml:XML,type:String):void {

			//それぞれでやってみる
			if ( type == ItemType.AMAZON ) {
				drowItem = new AmazonItem();
			} else if ( type == ItemType.PHOTOZO ) {
				drowItem = new PhotozoItem();
			} else if ( type == ItemType.TWITTER_TIMELINE ) {
				drowItem = new TimelineItem();
				drowItem.addEventListener(TimelineEvent.REPLY,reply);
			} else if ( type == ItemType.TWITTER_FOLLOWER ) {
				drowItem = new FollowerItem();
				drowItem.addEventListener(TimelineEvent.REPLY,reply);
			} else if ( type == ItemType.TWITTER_CM ) {
				drowItem = new AmazonItem();
			} else if ( type == ItemType.TWITTER_FRIEND ) {
				drowItem = new FriendItem();
			} else if ( type == ItemType.YAHOO ) {
				drowItem = new YahooItem();
			} else if ( type == ItemType.YOUTUBE ) {
				drowItem = new YoutubeItem();
			} else if ( type == ItemType.EMPTY ) {
				drowItem = new PhotozoItem();
			}

			drowItem.init(xml,_idx);	
			//追加する
			drowCanvas.addChild(drowItem);
		}

		//コンポーネントを削除する
		public function clear():void {

			//存在する場合
			if ( drowItem != null )	{
				//削除してGCする
				drowCanvas.removeChild(drowItem);
				drowItem = null;
			}
			System.gc();

			//変更イベントを生成
	 		var event:Event = new Event("redrow");			
			//イベントの割り当てを行う
			dispatchEvent(event);	
		}	

		//返信
		private function reply(event:TimelineEvent):void {
			dispatchEvent(event);
		}
	
		//ドラッグ開始
		private function dragStart(event:MouseEvent):void {
			startPointX = event.localX;
			startPointY = event.localY;
		}

		//ドラッグ終了
		private function dragEnd(event:MouseEvent):void {
			
			if ( ((event.localX - startPointX) < -55) &&
			     (Math.abs((event.localY - startPointY)) < 20 ) ) {
				//変更イベントを生成
	 			var emptyEvent:Event = new Event("empty");			
				//イベントの割り当てを行う
				dispatchEvent(emptyEvent);	
			}
		}

		//ドロップを許可		
		private function dropAccept(event:DragEvent) : void {
			if ( event.dragSource.hasFormat("items") ) {
   				DragManager.acceptDragDrop(drowCanvas);
   			}
		}

		//ドロップした時
		private function drop(event:DragEvent) : void {
			if ( event.dragSource.hasFormat("items") ) {
				var xml:XML = new XML(event.dragSource.dataForFormat("items").toString());
				//変更イベントを生成
	 			var tileEvent:PanelEvent = new PanelEvent("friend",xml,ItemType.TWITTER_FRIEND,_idx);
				//イベントの割り当てを行う
				dispatchEvent(tileEvent);	
			}
		}

		]]>
	</mx:Script>

	<!-- イベントを作成 -->
	<mx:Metadata>
		[Event(name="redrow", type="flash.events.Event")]
		[Event(name="empty" , type="flash.events.Event")]
		[Event(name="friend", type="jp.co.ziro.surpre.event.PanelEvent")]
		[Event(name="reply",  type="jp.co.ziro.surpre.event.TimelineEvent")]
	</mx:Metadata>

	<!-- 表示する領域 -->
	<mx:Canvas id="drowCanvas" width="100%" height="100%" 
		       mouseDown="dragStart(event)" mouseUp="dragEnd(event);"
		       dragEnter="dropAccept(event)" dragDrop="drop(event)" >
	</mx:Canvas>

</mx:VBox>
