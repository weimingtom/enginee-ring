<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 width="100%" height="100%"
		 creationComplete="init()" >

	<mx:Script>
		<![CDATA[
		import mx.controls.Alert;
		import jp.co.ziro.surpre.Globals;
		import jp.co.ziro.surpre.event.PanelEvent;
       	import jp.co.ziro.flex.controls.WaitWindow;
        import jp.co.ziro.flex.events.WaitEvent;
		import jp.co.ziro.surpre.display.ItemType;
		import mx.managers.PopUpManager;
		import jp.co.ziro.surpre.event.TimelineEvent;


		private var uploadFile:FileReference;
		//待機画面
		private var waitWindow:WaitWindow;
	
		private var _registT:Boolean;	
		private var _registF:Boolean;	
		private var _nsid:String;	

		//Twitter登録有無
		public function set registT(value:Boolean):void {
			_registT = value;
		}
		//Flickr登録有無
		public function set registF(value:Boolean):void {
			_registF = value;
		}
		//Flickr登録有無
		public function set nsid(value:String):void {
			_nsid = value;
		}
			
			
		private function init():void {
			
			var domain:String = Globals.getDomain();
			Globals.viewPage("/twitter");

			bitly.url     = domain + "rest/bitly/getUrl";
			tweet.url     = domain + "rest/twitter/tweet";
			timeline.url  = domain + "rest/twitter/getFriendTimeline";
			follower.url  = domain + "rest/twitter/getFollower";

			//登録がない場合
			if ( !_registT ) {
				showAuth();
			} else {
				showClient();
			}
		}

		//認証ボタン表示
		private function showAuth():void {
			tweetBox.height = 0;
			tweetBox.visible=false;

			oauthBox.height = 30;
			oauthBox.visible = true;
			linkAuth.enabled = true;
		}

		//TwitterClient表示
		private function showClient():void {
			comment.setFocus();
			oauthBox.height = 0;
			oauthBox.visible = false;
		}
		
		//認証ボタン押下
		private function clickAuth():void {
			linkAuth.enabled = false;
			//リンクを飛ばす
			navigateToURL(new URLRequest(Globals.getDomain() + "redirect/twitter/auth"),"_self");	
		}

		//つぶやく
		private function twitting():void {
			if ( comment.text == "" ) return;
			tweet.send();
		}

		//１４０文字制限の処理
		private function changeComment():void {

			if ( comment.text == "" ) {
				tweetBtn.enabled = false;
			} else if ( comment.text.length > 140 ) {
				tweetBtn.enabled = false;
			} else {
				tweetBtn.enabled = true;
			}

			leng.text = comment.text.length.toString();
		}
		
		//つぶやく
		private function tweed():void {
			comment.text = "";
			changeComment();
			//変更イベントを生成
		    var event:PanelEvent = new PanelEvent("submit",tweet.lastResult as XML,ItemType.TWITTER_CM,3);	
			//イベントの割り当てを行う
			dispatchEvent(event);
		}
	
		//URLの短縮	
		private function clickBitly():void {
			bitly.send();
		}

		//URLの追加jk
		private function insertComment():void {
			insertText(bitly.lastResult.url);
			longUrl.text = "";
		}

		//更新呼び出し
		private function updateTile():void {
			//変更イベントを生成
		    var event:PanelEvent = new PanelEvent("submit",timeline.lastResult as XML,ItemType.TWITTER_TIMELINE,5);	
			//イベントの割り当てを行う
			dispatchEvent(event);

		}
	
		//フリッカーのURLを取得	
		private function clickFlickr():void {
			//登録されている場合
			if ( _registF ) {
				//ファイル選択を行う
				selectFile();
			} else {
				//リンクを飛ばす
				navigateToURL(new URLRequest(Globals.getDomain() + "redirect/flickr/auth"),"_self");	
			}
		}

		//ファイルアップロード
		public function selectFile():void{
   			//ファイルオブジェクト
   			uploadFile = new FileReference();
			//イベント定義    			
		    uploadFile.addEventListener(Event.SELECT, uploadOpenHandler);
		    uploadFile.addEventListener(Event.CANCEL, selectCancel);
		    uploadFile.addEventListener(Event.COMPLETE, uploadCompleteHandler);
		    uploadFile.addEventListener(ProgressEvent.PROGRESS, uploadProgressHandler);
			uploadFile.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,callbackFunction);
			
			//ファイル選択
			uploadFile.browse();
		}

		//選択をキャンセルした場合	
		private function selectCancel(event:Event):void {
			uploadFile = null;
		}	

		private function callbackFunction(e:DataEvent):void{
			var xml:XML = new XML(e.data);
			longUrl.text = xml.url;
		};
	
		//ファイルアップロード開始
		private function uploadOpenHandler(event:Event):void {

			//待ち画面の作成
			//ポップアップを作成
			waitWindow =new WaitWindow();
			//イベントを設定	
			waitWindow.setLabel(uploadFile.name);

			PopUpManager.addPopUp(waitWindow, this, true);
   			PopUpManager.centerPopUp(waitWindow);
   			//キャンセルイベントを作成
			waitWindow.addEventListener(WaitEvent.CANCEL,uploadCancel);
			
			upload();
		}
		
		//ファイルアップロード中
		private function uploadProgressHandler(event:ProgressEvent):void {
			//プログレスの設定
		    waitWindow.setProgress(event.bytesLoaded / 2, event.bytesTotal);
		}

		//ファイルアップロード完了
		private function uploadCompleteHandler(event:Event):void {
			//取得したURLを設定	
			PopUpManager.removePopUp(waitWindow);
		}
		
		//ファイルアップロードキャンセル
		public function uploadCancel(event:Event):void {
			//キャンセル処理を行う
		    uploadFile.cancel();
			PopUpManager.removePopUp(waitWindow);
		}

		private function upload():void {
    		//アップロード開始
			var request:URLRequest = new URLRequest();
			request.method = URLRequestMethod.POST;
			request.url = Globals.getDomain() + "file/uploadFlickr";

			//アップロードを指定 
  			uploadFile.upload(request,"uploadFile",false);
		}

		//返信を追加
		public function addReply(event:TimelineEvent):void {
			insertText("@" + event.getUserId() + " ");
		}

		//つぶやきのボックスに入れる	
		private function insertText(data:String):void {
    		var str1:String = comment.text.substr(0,comment.selectionBeginIndex);
    		var str2:String = comment.text.substr(comment.selectionBeginIndex);
    		comment.text = str1 + data + str2;
    	}
  
  		//検索が終わったら 
    	private function followerHandler():void {
			//変更イベントを生成
		    var event:PanelEvent = new PanelEvent("submit",follower.lastResult as XML,ItemType.TWITTER_FOLLOWER,4);			
			//イベントの割り当てを行う
			dispatchEvent(event);
			
    	}

    	//表示の更新	
    	private function updateDisplay():void {
			timeline.send();
    	}
    	//表示の更新	
    	private function updateFollower():void {
			follower.send();
    	}

    	//表示の更新	
    	private function clickClear():void {
    		comment.text = "";
    	}
    	//表示の更新	
    	private function onEnterTweet(event:KeyboardEvent):void {
            //Enterキーに対するイベントの場合
            if(event.keyCode == Keyboard.ENTER) {
            	//つぶやく
            	twitting();
            }
    	}
		]]>
	</mx:Script>
    
    <mx:HTTPService id="tweet" showBusyCursor="true" method="POST" resultFormat="e4x" result="tweed()">		
      <mx:request>
        <tweet>{comment.text}</tweet>
      </mx:request>
    </mx:HTTPService>
    
    <mx:HTTPService id="timeline" showBusyCursor="true" method="POST" resultFormat="e4x" result="updateTile();"/>	
    <mx:HTTPService id="follower" showBusyCursor="true" method="POST" resultFormat="e4x" result="followerHandler();"/>	

    <mx:HTTPService id="bitly" showBusyCursor="true" method="POST" resultFormat="e4x" result="insertComment();">			
      <mx:request>
        <url>{longUrl.text}</url>
      </mx:request>
    </mx:HTTPService>

	<mx:Metadata>
		[Event(name="submit",type="jp.co.ziro.surpre.event.PanelEvent")]
	</mx:Metadata>

	<mx:HBox width="100%" id="oauthBox" visible="false" height="0" verticalAlign="middle" horizontalAlign="center">
		<mx:Button id="linkAuth" label="認証する" fontSize="18" height="30" enabled="false" click="clickAuth();"/>
	</mx:HBox>

	<mx:VBox width="100%" id="tweetBox" visible="true" height="165">
		<mx:HBox verticalAlign="middle" width="100%">
			<mx:TextArea id="comment" width="320" height="100" change="changeComment()"/>
			<mx:VBox verticalGap="2">
				<mx:Button id="tweetBtn" label="つぶやく" click="twitting();" enabled="false"  keyDown="onEnterTweet(event)"/>
				<mx:Label id="leng" fontSize="18" text="0" width="40" />
				<mx:Button label="写真追加" click="clickFlickr()"/>
				<mx:Button label="クリア" click="clickClear();" enabled="true"/>
			</mx:VBox>
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="URL" />
			<mx:TextInput id="longUrl" width="200"/>
			<mx:Button label="追加" click="clickBitly()" />
		</mx:HBox>
		<mx:HBox width="100%">
			<mx:Button label="タイムライン更新" click="updateDisplay();"/>
			<mx:Spacer width="100%" />
			<mx:Button label="友人表示" click="updateFollower();"/>
		</mx:HBox>
	</mx:VBox>

</mx:VBox>
