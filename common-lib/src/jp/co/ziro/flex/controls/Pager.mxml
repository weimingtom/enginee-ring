<?xml version="1.0" encoding="utf-8"?>
<mx:ToggleButtonBar xmlns:mx="http://www.adobe.com/2006/mxml" 
	                creationComplete="init();" 
	                itemClick="clickToggle();" 
	                dataProvider="{myPagerArray}" 
	                labelFunction="setLabel">
	<mx:Script>
		<![CDATA[
		import mx.collections.ArrayCollection;
		import jp.co.ziro.flex.events.PagerEvent;
		import mx.controls.Alert;

		//現在のページ
		private var nowIndex:Number = 1;
		//現在表示している最大数
		private var nowMaxPage:Number = 10;
		//最大のページ数
		private var maxPage:Number  = 1;

		//トグルの表示	
		[Bindable]
		private var myPagerArray:ArrayCollection;
		
	    private var myPagerXML:XML=
	      <pager>
			<page id="B"  label="&lt;" />
			<page id="1"  label="1" />
			<page id="2"  label="2" />
			<page id="3"  label="3" />
			<page id="4"  label="4" />
			<page id="5"  label="5" />
			<page id="6"  label="6" />
			<page id="7"  label="7" />
			<page id="8"  label="8" />
			<page id="9"  label="9" />
			<page id="10" label="10" />
			<page id="N"  label="&gt;" />
	      </pager>;
	   
		//初期表示を行う	
		private function init():void {
		}	
	
		//外部から最大のページを取得	
		public function updatePageInfo(aMaxPage:Number):void {
			maxPage = aMaxPage;
			updateDisplay(false);
		}

		//XMLデータを更新する	
		private function updateDisplay(updateFlag:Boolean):void {
			//子を取得	
			var xmlList:XMLList = myPagerXML.children();
			//新規に生成する
			myPagerArray = new ArrayCollection();

			//データ数回繰りかす
			for ( var cnt:Number = 0; cnt < xmlList.length(); ++cnt ) {
				var obj:Object = new Object();
				var wkXML:XML = xmlList[cnt];

				obj.id = wkXML.attribute("id");
				//表示が数値の場合
				if ( obj.id != "N" && obj.id != "B" ) {
					var num:Number = nowMaxPage - 10 + cnt;
					//ページを算出する	
					var lblValue:String = String(num);
					//最大値を超えていた場合
					if ( num > maxPage ) {
						lblValue = "-";
					}
					//表示値を変更する
					obj.label = lblValue;
					//XMLも変更する
					wkXML.replace("label",lblValue);
				} else {
					//そのまま設定
					obj.label = wkXML.attribute("label");
				}
				myPagerArray.addItem(obj);
			}
			
			if ( updateFlag ) {
				//最初の位置を選択する
				this.selectedIndex = 1;
			} else {
				this.selectedIndex = nowIndex;
			}
		}

		//トグルをクリック	
		private function clickToggle():void {

			//押されたトグルのインデックスを取得
			var clickNum:Number = this.selectedIndex;
			//クリックした位置から特殊系を選出	
			switch ( clickNum )	 {
				case 0:
					//１０ページ戻る
					var tenPage:Number = nowMaxPage - 10;
					if ( tenPage < 10 )	 {
						nowMaxPage = 10;
					} else {
						nowMaxPage = tenPage;
					}
					clickNum = 1;
					//画面更新を行う
					updateDisplay(true);
				break;
				case 11:
					//１０ページ進む
					var nextMaxPage:Number = nowMaxPage + 10;
					//最大ページより大きかった場合
					if ( nextMaxPage > maxPage )	 {
						if ( maxPage < 10 ) {
							nowMaxPage = 10;
						} else {
							nowMaxPage = maxPage;
						}
					} else {
						nowMaxPage = nextMaxPage;
					}
					clickNum = 1;
					//画面更新を行う
					updateDisplay(true);
				break;
			}

			//XMLリストからクリックした場所のページ数を取得
			var eventPageNum:Number = nowMaxPage - 10 + clickNum;
			//最大値より大きい(-)の時
			if ( eventPageNum > maxPage ) {
				//選択したことにしない
				this.selectedIndex = nowIndex;
				return;
			}
		
			//現在の選択値を設定	
			nowIndex = clickNum;

			//変更イベントを生成
		    var event:PagerEvent = new PagerEvent("change",eventPageNum);			
			//イベントの割り当てを行う
			dispatchEvent(event);

		}	
		/**
		 * 表示ラベルを編集する
		 */
		private function setLabel(item :Object) :String {
			return item.label;
		}
		]]>
    </mx:Script>

	<!-- イベントを作成 -->
	<mx:Metadata>
		[Event(name="change", type="bz.ziro.flex.events.PagerEvent")]
	</mx:Metadata>

</mx:ToggleButtonBar>
